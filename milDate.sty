\RequirePackage{l3keys2e,xparse}
\ProvidesExplPackage{milDate} {2023/01/16}{1.0} {Set date in NATO style}

%\ExplSyntaxOn

\keys_define:nn { mildate } {
	lang		.tl_set:N = \l__mildate_lang_tl,
	lang		.value_required:n = true,
	kern		.dim_set:N = \l__mildate_kern_dim,
	kern		.initial:n = { 1pt },
	kern		.value_required:n = true,
	timezone	.tl_set:N = \l__mildate_default_timezone_tl,
	timezone	.initial:n = { Z },
	timezone	.value_required:n = true,
}

\ProcessKeysOptions { mildate }

% If lang is not set take the global language
\tl_if_empty:NT \l__mildate_lang_tl 
	{ \tl_if_empty:cTF \languagename }
		{ \tl_set:Nn \l__mildate_lang_tl { english } }
		{ \tl_set:Nn \l__mildate_lang_tl { \languagename } } 

\int_new:N \__mildate_date_day_int
\int_new:N \__mildate_date_month_int
\int_new:N \__mildate_date_year_int
\int_new:N \__mildate_time_hour_int
\int_new:N \__mildate_time_minute_int

% Clean delimiters and make simple Validation
\cs_new_protected:Npn \__mildate_date_parse:n #1 {
	\regex_match:nnTF { \A \d{4}-\d{1,2}-\d{1,2} \Z } { #1 } { 
		\__mildate_date_iso_parse:www  #1 \q_stop 
	}{ \regex_match:nnTF { \A \d{1,2}-\d{1,2}-\d{2,4} \Z } { #1 } { 
		 \__mildate_date_parse:www  #1 \q_stop
		}{
		\__mildate_date_parse:www  00-00-0000 \q_stop
		}
	}
}

% Clean delimiters and make simple Validation
\cs_new_protected:Npn \__mildate_time_parse:n #1 {
	% hhmm without delimiter
	\regex_match:nnTF { \A \d{4} \Z } { #1 } 
		{	\seq_set_split:Nnn \l_tmpa_seq { } { #1 }
			\seq_put_right:Nx \l_tmpb_seq { \seq_item:Nn \l_tmpa_seq { 1 }  }
			\seq_put_right:Nx \l_tmpb_seq { \seq_item:Nn \l_tmpa_seq { 2 }  }
			\seq_put_right:Nn \l_tmpb_seq { - }
			\seq_put_right:Nx \l_tmpb_seq { \seq_item:Nn \l_tmpa_seq { 3 }  }
			\seq_put_right:Nx \l_tmpb_seq { \seq_item:Nn \l_tmpa_seq { 4 }  }
			\__mildate_time_parse:e { \seq_use:Nn \l_tmpb_seq {} }
		}
		% hh-mm with delimiter
		{ \regex_match:nnTF { \A \d{2}-\d{2} \Z } { #1 } 
			{ \__mildate_time_parse:ww #1 \q_stop }
			{ \__mildate_time_parse:ww  00-00 \q_stop }
		}
}
\cs_generate_variant:Nn \__mildate_date_parse:n { e }
\cs_generate_variant:Nn \__mildate_time_parse:n { e }

% Sets the date variables (assumes DIN 5008 dd-mm-yyyy)
\cs_new_protected:Npn \__mildate_date_parse:www #1-#2-#3 \q_stop {
	%\int_set:Nn \__mildate_date_year_int  {#3}
	%\int_set:Nn \__mildate_date_month_int {#2}
	%\int_set:Nn \__mildate_date_day_int   {#1}
	\__mildate_date_iso_parse:www #3-#2-#1 \q_stop
}
% Sets the date variables (assumes ISO Date yyyy-mm-dd)
\cs_new_protected:Npn \__mildate_date_iso_parse:www #1-#2-#3 \q_stop {
	\int_set:Nn \__mildate_date_year_int  {#1}
	\int_compare:nNnTF { #2 } > { 12 } 
		{ \int_set:Nn \__mildate_date_month_int { 00 } }
		{ \int_set:Nn \__mildate_date_month_int { #2 } }
	\int_compare:nNnTF { #3 } > { 31 } 	
		{ \int_set:Nn \__mildate_date_day_int   { 00 } }
		{ \int_set:Nn \__mildate_date_day_int   { #3 } }
}
% Sets the time variables (assumes hh-mm)
\cs_new_protected:Npn \__mildate_time_parse:ww #1-#2 \q_stop {
	\int_compare:nNnTF { #1 } > { 24 } 
  		{ \int_set:Nn \__mildate_time_hour_int   { 00 } }
  		{ \int_set:Nn \__mildate_time_hour_int   { #1 } }
  	\int_compare:nNnTF { #2 } > { 60 } 
  		{ \int_set:Nn \__mildate_time_minute_int { 00 } }
  		{ \int_set:Nn \__mildate_time_minute_int { #2 } }
}

\cs_new_protected:Npn \__mildate_monthname_german:n #1 {
	\int_case:nnF { #1 }
      {
        { 1 }  { JAN }
        { 2 }  { FEB }
        { 3 }  { MAR }
        { 4 }  { APR }
        { 5 }  { MAI }
        { 6 }  { JUN }
        { 7 }  { JUL }
        { 8 }  { AUG }
        { 9 }  { SEP }
        { 10 }  { OKT }
        { 11 }  { NOV }
        { 12 }  { DEZ }
      } { ??? }
}

\cs_new_protected:Npn \__mildate_monthname_english:n #1 {
	\int_case:nnF { #1 }
      {
        { 1 }  { JAN }
        { 2 }  { FEB }
        { 3 }  { MAR }
        { 4 }  { APR }
        { 5 }  { MAI }
        { 6 }  { JUN }
        { 7 }  { JUL }
        { 8 }  { AUG }
        { 9 }  { SEP }
        { 10 }  { OCT }
        { 11 }  { NOV }
        { 12 }  { DEC }
      } { ??? }
}

% Fill up integers to two digits 
\tl_new:N \pad_output_tl
\cs_new_protected:Npn \__mildate_padinteger:n #1 {
	%\group_begin:
	\tl_clear:N \pad_output_tl
	\int_compare:nNnT { #1 } < { 10 } { \tl_put_right:Nn \pad_output_tl { 0 } } 
	\tl_put_right:NV \pad_output_tl { #1 }
	\tl_use:N \pad_output_tl
	%\group_end:
}

% If the year has more than 2 digits just take the last two
\tl_new:N \split_output_tl
\cs_new_protected:Npn \__mildate_splityear:n #1 {	
	\tl_set:NV \split_output_tl { #1 }
	\int_compare:nNnTF { #1 } > { 99 } 
	{ \tl_range:Nnn \split_output_tl { 3 }{ -1 } }
	{ \tl_use:N \split_output_tl }
}

% Set time in military format
\NewDocumentCommand\milTime{mo} {
	\group_begin:
	% split time
	\tl_set:Nn \l_tmpa_tl { #1 }
	\regex_replace_all:nnN { [^\d] } { - } \l_tmpa_tl
	\__mildate_time_parse:e { \l_tmpa_tl }
	%% hour
	\__mildate_padinteger:n { \__mildate_time_hour_int }
	%% minutedefault
	\__mildate_padinteger:n { \__mildate_time_minute_int }
	%% timezone
	\IfValueT {#2}{\regex_match:nnTF { [a-i|k-z|A-I|K-Z] } { #2 } {#2} {?} }
	\group_end:
}

\NewDocumentCommand\milToday {} {
	\tl_set:Nn \l_tmpa_tl { \the\year-\the\month-\the\day }
	\exp_args:Ne \milDate { \l_tmpa_tl }
}

% Set date in military format
\NewDocumentCommand\milDate { m } {
	\group_begin:
	% split date
	\str_if_eq:nnTF { \today } { #1 }
		{ \exp_args:Nne \tl_set:Nn \l_tmpa_tl { \the\year-\the\month-\the\day } }
		{ \tl_set:Nn \l_tmpa_tl { #1 } }
	%\tl_set:Nn \l_tmpa_tl { #1 }
	\regex_replace_all:nnN { [^\d] } { - } \l_tmpa_tl
	\__mildate_date_parse:e { \l_tmpa_tl }
	%% day
	\__mildate_padinteger:n { \__mildate_date_day_int } \kern\l__mildate_kern_dim
	%% month
  	\use:c { __mildate_monthname_\l__mildate_lang_tl :n } { \__mildate_date_month_int }\kern\l__mildate_kern_dim
  	%% year
  	\__mildate_splityear:n { \__mildate_date_year_int }
  	\group_end:
}

% Set datetime in military format
% ISO yyyy-mm-dd
% dd-mm-yyyy (or yy)
\NewDocumentCommand\milDatetime{mom}{
	\group_begin:
	% split date
	\str_if_eq:nnTF { \today } { #1 }
		{ \exp_args:Nne \tl_set:Nn \l_tmpa_tl { \the\year-\the\month-\the\day } }
		{ \tl_set:Nn \l_tmpa_tl { #1 } }
	\regex_replace_all:nnN { [^\d] } { - } \l_tmpa_tl
	\__mildate_date_parse:e { \l_tmpa_tl }
	%% day
	\__mildate_padinteger:n { \__mildate_date_day_int } \kern\l__mildate_kern_dim
	% insert time
	\IfNoValueTF {#2} 
		{ \milTime{#3}{ \l__mildate_default_timezone_tl} }
		{\milTime{#3}[#2] }
	\kern\l__mildate_kern_dim
	%% month
  	\__mildate_monthname_german:n { \__mildate_date_month_int } \kern\l__mildate_kern_dim
  	%% year
  	\__mildate_splityear:n { \__mildate_date_year_int }
  	\group_end:
}

